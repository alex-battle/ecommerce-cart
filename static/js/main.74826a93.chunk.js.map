{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","href","onClick","handleAddToCart","src","sku","alt","title","util","price","e","React","Component","Filter","state","count","value","sort","onChange","handleChangeSort","size","handleChangeSize","Basket","cartItems","length","item","handleRemoveFromCart","reduce","a","c","alert","App","setState","target","listProducts","b","filteredProducts","filter","availableSizes","indexOf","toUpperCase","bind","fetch","then","res","json","data","localStorage","getItem","JSON","parse","productAlreadyInCart","forEach","push","setItem","stringify","elm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74826a93.chunk.js","sourcesContent":["export default {\n    formatCurrency: function(num){\n        return '$' + Number(num.toFixed(2)).toLocaleString() + ' ';\n    }\n}","import React from 'react';\nimport util from '../util'\n\nclass Products extends React.Component {\n\n    render() {\n        const productItems = this.props.products.map(product => (\n            <div className=\"col-md-4\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n                    <a href={`#${product.id}`} onClick={this.props.handleAddToCart}>\n                        <img src={`/products/${product.sku}_1.jpg`} alt={product.title} />\n                        <p>\n                            {product.title}\n                        </p>\n                    </a>\n                    <div>\n                        <b>{util.formatCurrency(product.price)}</b>\n                        <button className=\"btn btn-primary\"\n                            onClick={(e) => this.props.handleAddToCart(e, product)}>Add To Cart</button>\n                    </div>\n\n                </div>\n            </div>\n        )\n        )\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        );\n    }\n}\n\nexport default Products;","import React from 'react';\n\nclass Filter extends React.Component {\n    state = {}\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    {this.props.count} products found.\n                </div>\n                <div className=\"col-md-4\">\n                    <label>\n                        Order by\n                        <select className=\"form-control\" value={this.props.sort}\n                            onChange={this.props.handleChangeSort}>\n                            <option value=\"\">Select</option>\n                            <option value=\"lowest\">Lowest to Highest</option>\n                            <option value=\"highest\">Highest to Lowest</option>\n                        </select>\n\n                    </label>\n                </div>\n                <div className=\"col-md-4\">\n                    <label>\n                        Filter Size\n\n                        <select className=\"form-control\" value={this.props.size}\n                            onChange={this.props.handleChangeSize}>\n                            <option value=\"\">All</option>\n                            <option value=\"xs\">Extra Small</option>\n                            <option value=\"s\">Small</option>\n                            <option value=\"m\">Medium</option>\n                            <option value=\"l\">Large</option>\n                            <option value=\"xl\">Extra Large</option>\n                            <option value=\"xxl\">2 X</option>\n                        </select>\n\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport util from '../util'\n\nclass Basket extends React.Component {\n    render() {\n        const { cartItems } = this.props\n        return (\n            <div className=\"alert alert-info\">\n                {cartItems.length === 0 ? \"Basket is Empty\" : <div> You have {cartItems.length} products in the basket</div>}\n                {/* if cart items are greater than zero  */}\n                {cartItems.length > 0 &&\n                    <div>\n                        <ul>\n                            {cartItems.map(item =>\n                                <li>\n                                    <b>{item.title}</b>\n                                    X {item.count} = {item.price * item.count}\n                                    <button className=\"btn btn-danger\"\n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}\n                                    >X</button>\n                                </li>\n                            )}\n                        </ul>\n                        Total: {util.formatCurrency(cartItems.reduce((a, c) => a + c.price + c.count, 0))}\n                    </div>\n                }\n                <button className=\"btn btn-primary\"\n                    onClick={() => (alert(\"Checkout needs to implement....\"))}>Checkout</button>\n            </div>\n        );\n    }\n}\n\nexport default Basket;","import React from 'react';\nimport './App.css';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      filteredProducts: [],\n      cartItems: []\n    }\n    this.handleChangeSort = this.handleChangeSort.bind(this)\n    this.handleChangeSize = this.handleChangeSize.bind(this)\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n  }\n  componentWillMount() {\n    fetch(\"http://localhost:8000/products\").then(res => res.json())\n      .then(data => this.setState({\n        products: data,\n        filteredProducts: data\n      }));\n\n    if (localStorage.getItem('cartItems')) {\n      this.setState({ cartItems: JSON.parse(localStorage.getItem('cartItems')) })\n    }\n  }\n  handleAddToCart(e, product) {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++\n        }\n      })\n\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 })\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n      return cartItems\n    }\n    )\n  }\n  handleRemoveFromCart(e, item) {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(elm => elm.id != item.id)\n      localStorage.setItem('cartItems', cartItems)\n      return { cartItems }\n    })\n  }\n  handleChangeSort = (e) => {\n    this.setState({\n      sort: e.target.value\n    });\n    this.listProducts();\n  }\n  handleChangeSize = (e) => {\n    this.setState({\n      size: e.target.value\n    });\n    this.listProducts();\n  }\n  listProducts = () => {\n    this.setState(state => {\n      // filter by price\n      if (state.sort !== '') {\n        state.products.sort((a, b) =>\n          (state.sort === 'lowest'\n            ? ((a.price > b.price) ? 1 : -1)\n            : ((a.price < b.price) ? 1 : -1)))\n      } else {\n        state.products.sort((a, b) => (a.id > b.id) ? 1 : -1);\n      }\n\n      // filter by size\n      if (state.size !== '') {\n        return {\n          filteredProducts: state.products.filter(a =>\n            a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n          )\n        }\n      }\n      return { filteredProducts: state.products }\n      // return {filteredProducts: this.state.products.filter(a=> a.availableSizes.indexOf(state.size.toUppercase())\n    })\n  }\n\n\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <h1>Alexzon shopping cart</h1>\n        <div className=\"rows\"></div>\n        <div className=\"col-md-8\">\n          {/* pass state and handleclick events to each component */}\n          <Filter size={this.state.size} sort={this.state.sort} handleChangeSize={this.handleChangeSize}\n            handleChangeSort={this.handleChangeSort} count={this.state.filteredProducts.length} />\n          <Products products={this.state.filteredProducts} handleAddToCart={this.handleAddToCart} />\n        </div>\n        <div className=\"col-md-4\">\n          <Basket cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />\n        </div>\n        <div className=\"basket\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}